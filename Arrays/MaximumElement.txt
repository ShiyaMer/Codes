1)Largest Element in Array
def largestElement(arr: [], n: int) -> int:
    #brute is sorting and returning element at n-1 position complexity nlogn space=o(1)
    #Below is optimal
    maxi=-float('inf')
    for i in arr:
        if i>maxi:
            maxi=i
    return maxi        
        
2)Second Largest Element and Second Smallest Element
def getSecondOrderElements(n: int,  a: [int]) -> [int]:
#Brute force is again sorting and using a loop to check whether there is duplicates
    mini=float('inf')
    maxi=-float('inf')
    for i in a:
        if i>maxi and i!=max(a):
            maxi=i
        if i<mini and i!=min(a):
            mini=i
    return [maxi,mini]

3)To check if array is sorted
def isSorted(n: int,  a: [int]) -> int:
    for i in range(1,n):
        if a[i]>=a[i-1]:
            continue
        else:
            return 0
    return 1  

4)To return length of sorted array containing no duplicates:
def removeDuplicates(arr,n):
    count=1
    for i in range(1,n):
        if arr[i]!=arr[i-1]:
            count+=1
    return count        
or 
return len(set(arr)) time complexity is nlogn(insertion into set)
 

